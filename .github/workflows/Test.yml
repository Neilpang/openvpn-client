name: Test
on:
  push:
    branches:
      - '*'
    paths:
      - '**'
      - '!**.md'

  pull_request:
    branches:
      - '*'
    paths:
      - '**'
      - '!**.md'


jobs:
  Ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: docker build -t wg . -f Dockerfile
    - name: Test single container
      run:  |
        docker run --rm -id \
        --name wgcf \
        --sysctl net.ipv6.conf.all.disable_ipv6=0 \
        --privileged --cap-add net_admin \
        -v /lib/modules:/lib/modules \
        -v $(pwd)/wgcf:/wgcf \
        wg
        while ! docker logs wgcf | grep "OK, wgcf is up"; do
          echo wait
          sleep 1
        done
        docker exec -i wgcf curl ipinfo.io
        docker exec -i wgcf curl ipv6.ip.sb
        docker run --rm   --network container:wgcf  curlimages/curl curl ipinfo.io
        docker run --rm   --network container:wgcf  curlimages/curl curl ipv6.ip.sb
        docker stop wgcf

    - name: Test single container V4
      run:  |
        docker run --rm -id \
        --name wgcf \
        --sysctl net.ipv6.conf.all.disable_ipv6=0 \
        --privileged --cap-add net_admin \
        -v /lib/modules:/lib/modules \
        -v $(pwd)/wgcf:/wgcf \
        wg -4
        while ! docker logs wgcf | grep "OK, wgcf is up"; do
          echo wait
          sleep 1
        done
        docker exec -i wgcf curl ipinfo.io
        docker run --rm   --network container:wgcf  curlimages/curl curl ipinfo.io
        docker stop wgcf

    - name: Test single container V6
      run:  |
        docker run --rm -id \
        --name wgcf \
        --sysctl net.ipv6.conf.all.disable_ipv6=0 \
        --privileged --cap-add net_admin \
        -v /lib/modules:/lib/modules \
        -v $(pwd)/wgcf:/wgcf \
        wg -6
        while ! docker logs wgcf | grep "OK, wgcf is up"; do
          echo wait
          sleep 1
        done
        docker exec -i wgcf curl ipv6.ip.sb
        docker run --rm   --network container:wgcf  curlimages/curl curl ipv6.ip.sb
        docker stop wgcf
        
  Alpine:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: docker build -t wg-alpine . -f Dockerfile.alpine
    - name: Test single container
      run:  |
        docker run --rm -id \
        --name wgcf \
        --sysctl net.ipv6.conf.all.disable_ipv6=0 \
        --privileged --cap-add net_admin \
        -v /lib/modules:/lib/modules \
        -v $(pwd)/wgcf:/wgcf \
        wg-alpine
        while ! docker logs wgcf | grep "OK, wgcf is up"; do
          echo wait
          sleep 1
        done
        docker exec -i wgcf curl ipinfo.io
        docker exec -i wgcf curl ipv6.ip.sb
        docker run --rm   --network container:wgcf  curlimages/curl curl ipinfo.io
        docker run --rm   --network container:wgcf  curlimages/curl curl ipv6.ip.sb
        docker stop wgcf


    - name: Test single container V4
      run:  |
        docker run --rm -id \
        --name wgcf \
        --sysctl net.ipv6.conf.all.disable_ipv6=0 \
        --privileged --cap-add net_admin \
        -v /lib/modules:/lib/modules \
        -v $(pwd)/wgcf:/wgcf \
        wg-alpine -4
        while ! docker logs wgcf | grep "OK, wgcf is up"; do
          echo wait
          sleep 1
        done
        docker exec -i wgcf curl ipinfo.io
        docker run --rm   --network container:wgcf  curlimages/curl curl ipinfo.io
        docker stop wgcf


    - name: Test single container V6
      run:  |
        docker run --rm -id \
        --name wgcf \
        --sysctl net.ipv6.conf.all.disable_ipv6=0 \
        --privileged --cap-add net_admin \
        -v /lib/modules:/lib/modules \
        -v $(pwd)/wgcf:/wgcf \
        wg-alpine -6
        while ! docker logs wgcf | grep "OK, wgcf is up"; do
          echo wait
          sleep 1
        done
        docker exec -i wgcf curl ipv6.ip.sb
        docker run --rm   --network container:wgcf  curlimages/curl curl ipv6.ip.sb
        docker stop wgcf

        
        
  Ubuntu-HostMode:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: docker build -t wg . -f Dockerfile
    - name: Test single container
      run:  |
        docker run --rm -id \
        --name wgcf \
        --net=host \
        --privileged --cap-add net_admin \
        -v /lib/modules:/lib/modules \
        -v $(pwd)/wgcf:/wgcf \
        wg
        while ! docker logs wgcf | grep "OK, wgcf is up"; do
          echo wait
          sleep 1
        done
        curl ipinfo.io
        curl ipv6.ip.sb
        docker stop wgcf


    - name: Test single container V4
      run:  |
        docker run --rm -id \
        --name wgcf \
        --net=host \
        --privileged --cap-add net_admin \
        -v /lib/modules:/lib/modules \
        -v $(pwd)/wgcf:/wgcf \
        wg -4
        while ! docker logs wgcf | grep "OK, wgcf is up"; do
          echo wait
          sleep 1
        done
        curl ipinfo.io
        docker stop wgcf


    - name: Test single container V6
      run:  |
        docker run --rm -id \
        --name wgcf \
        --net=host \
        --privileged --cap-add net_admin \
        -v /lib/modules:/lib/modules \
        -v $(pwd)/wgcf:/wgcf \
        wg -6
        while ! docker logs wgcf | grep "OK, wgcf is up"; do
          echo wait
          sleep 1
        done
        curl ipv6.ip.sb
        docker stop wgcf

        
  Alpine-HostMode:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: docker build -t wg-alpine . -f Dockerfile.alpine
    - name: Test single container
      run:  |
        docker run --rm -id \
        --name wgcf \
        --net=host \
        --privileged --cap-add net_admin \
        -v /lib/modules:/lib/modules \
        -v $(pwd)/wgcf:/wgcf \
        wg-alpine
        while ! docker logs wgcf | grep "OK, wgcf is up"; do
          echo wait
          sleep 1
        done
        curl ipinfo.io
        curl ipv6.ip.sb
        docker stop wgcf


    - name: Test single container V4
      run:  |
        docker run --rm -id \
        --name wgcf \
        --net=host \
        --privileged --cap-add net_admin \
        -v /lib/modules:/lib/modules \
        -v $(pwd)/wgcf:/wgcf \
        wg-alpine -4
        while ! docker logs wgcf | grep "OK, wgcf is up"; do
          echo wait
          sleep 1
        done
        curl ipinfo.io
        docker stop wgcf


    - name: Test single container V6
      run:  |
        docker run --rm -id \
        --name wgcf \
        --net=host \
        --privileged --cap-add net_admin \
        -v /lib/modules:/lib/modules \
        -v $(pwd)/wgcf:/wgcf \
        wg-alpine -6
        while ! docker logs wgcf | grep "OK, wgcf is up"; do
          echo wait
          sleep 1
        done
        curl ipv6.ip.sb
        docker stop wgcf
        
        
 
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        